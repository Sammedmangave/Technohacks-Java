import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class SnakeGame {
    
    private static final int WIDTH = 20;
    private static final int HEIGHT = 10;
    private static final char EMPTY = ' ';
    private static final char SNAKE_BODY = '#';
    private static final char FOOD = '*';
    
    private static int[][] board = new int[WIDTH][HEIGHT];
    private static ArrayList<int[]> snake = new ArrayList<>();
    private static int[] food = new int[2];
    private static int direction = 0; // 0=UP, 1=RIGHT, 2=DOWN, 3=LEFT
    private static boolean gameOver = false;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        initializeGame();
        printBoard();

        while (!gameOver) {
            System.out.print("Enter direction (W=UP, D=RIGHT, S=DOWN, A=LEFT): ");
            char input = scanner.nextLine().toUpperCase().charAt(0);
            switch (input) {
                case 'W': direction = 0; break;
                case 'D': direction = 1; break;
                case 'S': direction = 2; break;
                case 'A': direction = 3; break;
                default: System.out.println("Invalid input. Use W, A, S, or D."); continue;
            }
            moveSnake();
            if (!gameOver) {
                printBoard();
            }
        }
        
        System.out.println("Game Over! Your score: " + (snake.size() - 1));
        scanner.close();
    }

    private static void initializeGame() {
        // Initialize snake with one segment
        snake.clear();
        snake.add(new int[]{WIDTH / 2, HEIGHT / 2});
        placeFood();
    }

    private static void placeFood() {
        Random random = new Random();
        food[0] = random.nextInt(WIDTH);
        food[1] = random.nextInt(HEIGHT);
        while (isFoodOnSnake()) {
            food[0] = random.nextInt(WIDTH);
            food[1] = random.nextInt(HEIGHT);
        }
    }

    private static boolean isFoodOnSnake() {
        for (int[] segment : snake) {
            if (segment[0] == food[0] && segment[1] == food[1]) {
                return true;
            }
        }
        return false;
    }

    private static void moveSnake() {
        int[] head = snake.get(0);
        int[] newHead = new int[]{head[0], head[1]};

        switch (direction) {
            case 0: newHead[1]--; break; // UP
            case 1: newHead[0]++; break; // RIGHT
            case 2: newHead[1]++; break; // DOWN
            case 3: newHead[0]--; break; // LEFT
        }

        if (isCollision(newHead)) {
            gameOver = true;
            return;
        }

        snake.add(0, newHead);

        if (newHead[0] == food[0] && newHead[1] == food[1]) {
            placeFood(); // Place new food
        } else {
            snake.remove(snake.size() - 1); // Remove tail segment
        }
    }

    private static boolean isCollision(int[] head) {
        if (head[0] < 0 || head[0] >= WIDTH || head[1] < 0 || head[1] >= HEIGHT) {
            return true;
        }
        for (int i = 1; i < snake.size(); i++) {
            if (snake.get(i)[0] == head[0] && snake.get(i)[1] == head[1]) {
                return true;
            }
        }
        return false;
    }

    private static void printBoard() {
        char[][] board = new char[WIDTH][HEIGHT];
        for (int x = 0; x < WIDTH; x++) {
            for (int y = 0; y < HEIGHT; y++) {
                board[x][y] = EMPTY;
            }
        }

        for (int[] segment : snake) {
            board[segment[0]][segment[1]] = SNAKE_BODY;
        }
        board[food[0]][food[1]] = FOOD;

        for (int y = 0; y < HEIGHT; y++) {
            for (int x = 0; x < WIDTH; x++) {
                System.out.print(board[x][y] + " ");
            }
            System.out.println();
        }
    }
}
